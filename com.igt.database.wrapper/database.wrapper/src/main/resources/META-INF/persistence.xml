<?xml version="1.0"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">
	<persistence-unit name="mongodb" transaction-type="RESOURCE_LOCAL">
		<!-- Use the Hibernate OGM provider: configuration will be transparent -->
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<properties>
			<property name="hibernate.ogm.datastore.provider"
				value="org.hibernate.ogm.datastore.mongodb.impl.MongoDBDatastoreProvider" />
			<property name="hibernate.ogm.datastore.database" value="odm_hibernate" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.ogm.datastore.create_database"
				value="true" />
		</properties>
	</persistence-unit>
	<persistence-unit name="neo4j" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<properties>
			<property name="hibernate.ogm.datastore.provider" value="neo4j_embedded" />
			<property name="hibernate.ogm.neo4j.database_path" value=".neo4j/" />
			<property name="hibernate.search.default.directory_provider"
				value="ram" />
			<property name="hibernate.show_sql" value="true" />
		</properties>
	</persistence-unit>
	<persistence-unit name="infinispan" transaction-type="RESOURCE_LOCAL">
		<!-- Use the Hibernate OGM provider: configuration will be transparent -->
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<properties>
			<!-- Here you will pick which NoSQL technology to use, and configure it; 
				in this example we start a local in-memory Infinispan node. -->
			<property name="hibernate.ogm.datastore.provider" value="infinispan" />
		</properties>
	</persistence-unit>
	<persistence-unit name="ehcache" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<properties>
			<property name="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider" />
		</properties>
	</persistence-unit>
	<persistence-unit name="redis" transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<exclude-unlisted-classes>false</exclude-unlisted-classes>
		<properties>
			<property name="hibernate.ogm.datastore.provider" value="REDIS_EXPERIMENTAL" />
			<property name="hibernate.ogm.datastore.host" value="127.0.0.1:6379" />
			<!-- <property name="hibernate.ogm.redis.ttl" value="-1" /> -->
			<property name="hibernate.ogm.redis.ssl" value="false" />
			<property name="hibernate.ogm.redis.cluster" value="false" />
			<!-- <property name="hibernate.ogm.datastore.grid_dialect" value="org.hibernate.ogm.datastore.redis.RedisHashDialect" 
				/> -->
			<property name="hibernate.ogm.datastore.grid_dialect"
				value="org.hibernate.ogm.datastore.redis.RedisJsonDialect" />

		</properties>
	</persistence-unit>
	<persistence-unit name="cassandra"
		transaction-type="RESOURCE_LOCAL">
		<!-- Use Hibernate OGM provider: configuration will be transparent -->
		<provider>org.hibernate.ogm.jpa.HibernateOgmPersistence</provider>
		<properties>
			<property name="hibernate.ogm.cassandra.default_keyspace"
		value="test" />
			<property name="hibernate.ogm.cassandra.url" value="jdbc:cassandra://localhost:9042" />
			<property name="hibernate.hbm2ddl.auto" value="create-drop" />
		</properties>
	</persistence-unit>
	<persistence-unit name="mysql">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<properties>
			<property name="hibernate.archive.autodetection" value="class" />
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
			<property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
			<property name="hibernate.connection.url"
				value="jdbc:mysql://localhost:3306/igt?createDatabaseIfNotExist=true" />
			<property name="hibernate.connection.username" value="root" />
			<property name="hibernate.connection.password" value="admin" />
			<!-- <property name="hibernate.show_sql" value="true"/> -->
			<property name="hibernate.flushMode" value="FLUSH_AUTO" />
			<property name="hibernate.hbm2ddl.auto" value="create" />
			<property name="hibernate.show_sql" value="true" />
		</properties>
	</persistence-unit>
</persistence>
